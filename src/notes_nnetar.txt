require('forecast')
fit <- nnetar(lynx)
fcast <- forecast(fit)
plot(fcast)
fit <- nnetar(lynx, decay=0.5, maxit=150)
plot(forecast(fit))
lines(lynx)
fit <- nnetar(lynx, decay=0.5, maxit=150)
plot(forecast(fit))
lines(lynx)
fit <- nnetar(window(lynx,end=1920), decay=0.5, maxit=150)
plot(forecast(fit,h=14))
lines(lynx)
fit2 <- nnetar(window(lynx,start=1921), model=fit)
plot(fit2)
plot(forecast(fit2,h=14))
str(lynx)
fit <- nnetar(window(lynx,end=1920), decay=0.5, maxit=1500)
plot(forecast(fit,h=25))
lines(lynx)
history()

# generate sawtooth
xsaw<-seq(0,10, length=100)
ysaw<-xsaw%%1
ts(ysaw, frequency=10)

# generate with tuneN
require('tuneN')
values <- 1 - sawtooth(100) + 0.05 * sine(1000) + 0.03 * sine(1500)
plot(ts(values@left[0:1500]))

# example from https://www.otexts.org/fpp/9/3
require('fpp')
data(sunspotarea)
fit <- nnetar(sunspotarea,lambda=0)
plot(forecast(fit,h=20))

# generate a saw tooth
xsaw<-1-seq(0,1, length=10)
xrep <- rep(xsaw, 10))
fit <- nnetar(1 + xrep, lambda=0)
plot(forecast(fit, h=20))

# use real data
mem <- scan("./data/ums_values.txt")
require('forecast')
# 1060 samples give NNAR(5,3)
# 1063 samples give NNAR(29,15)
plot(forecast((nnetar(mem[118:(length(mem))], lambda=0)), h=50))
